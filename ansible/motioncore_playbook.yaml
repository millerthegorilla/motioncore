---
- name: Import sub playbooks
  hosts: localhost
  connection: local
  vars:
    env_path: './.env'
    values:
      - motion_user_ssh_authorized_key
      # list more .env vars here
  tasks:
    - name: Read values from environment
      ansible.builtin.shell: "source {{env_path}}; echo ${{item|upper}}"
      register: output
      with_items: "{{ values }}"
      changed_when: false
    - name: Store read value
      ansible.builtin.set_fact:
        "{{ item.0 }}": "{{ item.1.stdout }}"
      when: '{{ item.0 }} is undefined'
      with_together:
        - "{{ values }}"
        - "{{ output.results }}"
      changed_when: false
    - name: Get local packages for later conditional test for coreos-installer
      ansible.builtin.package_facts:
        manager: auto
      register: local_pkgs
    - name: set pkg fact
      ansible.builtin.set_fact:
        local_pkgs: "{{ local_pkgs }}"
# # cleanup previous or broken attempts
# - ansible.builtin.import_playbook: ./cleanup.yaml

# # template the ignition file and the script
# - ansible.builtin.import_playbook: coreos_config/templates/template.yaml

# # transpile config.bu to config.ign
# - ansible.builtin.import_playbook: coreos_config/provision/provision1.yaml

# # run script to install coreos to microsd card
# # if coreos-installer is installed (fedora only)
# - ansible.builtin.import_playbook: coreos_config/provision/provision1-1.yaml

# # install coreos to microsd card using container
# # (other distros ie when coreos-installer is not installed)
# - ansible.builtin.import_playbook: coreos_config/provision/provision1-2.yaml

# # install firmware to microsd card
# - ansible.builtin.import_playbook: coreos_config/provision/provision1-3.yaml

# obtain ip address of remote host from user and set fact
# - ansible.builtin.import_playbook: coreos_config/provision/provision2.yaml

# # install rpm-fusion repo and reboot
# - ansible.builtin.import_playbook: coreos_config/provision/provision3.yaml

# install packages and reboot
# - ansible.builtin.import_playbook: coreos_config/provision/provision4.yaml

# copy configuration files
- ansible.builtin.import_playbook: coreos_config/copy/copy.yaml

# setup podman
- ansible.builtin.import_playbook: coreos_config/podman/podman.yaml
