---
- block:
    - name: Create directories
      ansible.builtin.file:
        path: "{{ item.path }}"
        state: directory
        owner: "{{ item.owner }}"
        group: "{{ item.group }}"
        mode: "{{ item.mode }}"
        setype: "{{ item.setype if item.setype is defined else setype | default(omit) }}"
      loop:
        - { path: "/var/home/motion_user/files", mode: "0750", owner: "motion_user", group: "motion_user", setype: "container_file_t"}
        - { path: "/var/home/motion_user/image_build", mode: "0750", owner: "motion_user", group: "motion_user"}
        - { path: "/var/home/motion_user/.config/systemd/user", mode: "0750", owner: "motion_user", group: "motion_user"}
      delegate_to: "{{ remote_ip }}"
    - name: Set selinux on file
      community.general.sefcontext:
        target: /var/home/motion_user/files(/.*)?
        setype: container_file_t
        seuser: unconfined_u
        state: present
      delegate_to: "{{ remote_ip }}"
    - name: Set owner on motion.log
      ansible.builtin.file:
        path: /var/log/custom_motion.log
        state: touch
        owner: motion_user
        group: video
        mode: "0660"
      delegate_to: "{{ remote_ip }}"
    - name: Copy files to remote machine
      ansible.builtin.copy:
        src: "{{ item.src }}"
        dest: "{{ item.dest }}"
        mode: "{{ item.mode }}"
        owner: "{{ item.owner if item.owner is defined else owner | default(omit) }}"
        group: "{{ item.group if item.group is defined else group | default(omit) }}"
        serole: "{{ item.serole if item.serole is defined else serole | default(omit) }}"
        seuser: "{{ item.seuser if item.seuser is defined else seuser | default(omit) }}"
        setype: "{{ item.setype if item.setype is defined else setype | default(omit) }}"
      loop:
        - { src: '{{ role_path }}/files/fail2ban.conf', dest: '/etc/fail2ban/fail2ban.conf', mode: "0640", owner: root, group: root }
        - { src: '{{ role_path }}/files/templated/sshd.conf', dest: '/etc/fail2ban/jail.d/sshd.conf', mode: "0640", owner: "root", group: "root" }
        - { src: '{{ role_path }}/files/templated/motion.conf', dest: '/etc/motion/motion.conf', mode: "0640", owner: "root", group: "video" }
        - { src: '{{ role_path }}/files/custom_motion.service', dest: '/var/home/motion_user/.config/systemd/user/custom_motion.service', mode: "0644", owner: "motion_user", group: "motion_user" }
        - { src: '{{ role_path }}/files/motion_default', dest: '/etc/default/motion', mode: "0444", owner: "root", group: "root" }
        - { src: '{{ role_path }}/files/Dockerfile', dest: '{{ image_build }}/Dockerfile', mode: "0400", owner: "motion_user", group: "motion_user" }
        - { src: '{{ role_path }}/files/templated/motion_mail.py', dest: '{{ image_build }}/motion_mail.py', mode: "0400", owner: "motion_user", group: "motion_user" }
        - { src: '{{ role_path }}/files/templated/motionmail.sh', dest: '/var/home/motion_user/motionmail.sh', mode: "0500", owner: "motion_user", group: "motion_user" }
        - { src: '{{ role_path }}/files/policy_motioncore.te', dest: '/var/home/motion_user/policy_motioncore.te', mode: "0500", owner: "motion_user", group: "motion_user" }
      delegate_to: "{{ remote_ip }}"
  remote_user: core
  become: true
