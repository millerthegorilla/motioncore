  # use FCCT to transpile config.bu to config.ign
# - name: Transpile to config.ign
#   ansible.builtin.import_tasks: provision/01_transpile.yaml
#   # run script to install coreos to microsd card
#   # if coreos-installer is installed (fedora only)
# - name: Install to microsd if coreos-installer is present
#   ansible.builtin.include_tasks: 
#     file: provision/02_01_image_ssd.yaml
#     apply:
#       become: true
#       become_method: sudo
#   when: "'coreos-installer' in local_pkgs.ansible_facts.packages"
#   # install coreos to microsd card using container
#   # (other distros ie when coreos-installer is not installed)
#   # (uses privilged podman container)
# - name: Install to microsd if coreos-installer is not present
#   ansible.builtin.include_tasks:
#     file: provision/02_02_image_ssd.yaml
#     apply:
#       become: true
#       become_method: sudo
#   when: "'coreos-installer' not in local_pkgs.ansible_facts.packages"
#   # install firmware to microsd card
# - name: Install firmware
#   ansible.builtin.include_tasks: 
#     file: provision/03_install_firmware.yaml
#     apply:
#       become: true
#       become_method: sudo
  # obtain ip address of remote host from user and set fact
- name: Get remote ip, set host
  ansible.builtin.include_tasks: 
    file: provision/04_get_set_ip.yaml
  # install python and rpm-fusion repo and reboot
- name: Install python etc and reboot
  ansible.builtin.include_tasks: 
    file: provision/05_install_required.yaml
    apply:
      remote_user: core
      become: yes
      become_user: root
      become_method: sudo
  # install packages and reboot
- name: Install packages and reboot
  ansible.builtin.include_tasks: 
    file: provision/06_install_pkgs.yaml
    apply:
      remote_user: core
      become: yes
      become_user: root
      become_method: sudo
